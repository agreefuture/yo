// io module

// WIP. Does not work yet

use "std/string";

struct File (
    _handle: int,
);

impl File {
    fn read(self: File, length: int): int {
        // TODO
    }

    fn close(self: File): void {
        io::_close(self._handle);
        runtime::free(self as int);
    }
}

impl io {
    static fn open(path: String, mode: String): File {
        val _handle: int = io::_open(path, mode);
        io::printf("_handle: %n", [@_handle]);
        ret File::init(_handle);
    }
}

impl io {
    static fn printi(arg: int): void {
        runtime::_printi(arg);
    }

    static fn printd(arg: double): void {
        runtime::_printd(arg);
    }

    static fn print(arg: String): void {
        runtime::_print(arg);
    }

    static fn printf(format: String, args: Array): void {
        // We have to split this into declaration and function call to get the right arc behaviour
        // TODO fix this
        val msg = String::format(format, args);
        runtime::_print(msg);
        //runtime::_print(String::format(format, args));
    }
}
