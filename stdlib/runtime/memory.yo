use ":runtime/intrinsics";

use size_t = u64;

#[extern] fn malloc(size_t) -> *i8;
#[extern] fn calloc(size_t, size_t) -> *i8;
#[extern] fn free(*i8);


// Allocate some memory
#[always_inline]
fn alloc<T>(count: size_t) -> *T {
    let base = calloc(count, sizeof<T>());
    return reinterpret_cast<*T>(base);
}

// Deallocate some allocated memory.
// TODO rename to memory::dealloc once namespaces are a thing
#[always_inline]
fn dealloc<T>(ptr: *T) {
    free(reinterpret_cast<*i8>(ptr));
}

