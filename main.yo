type Array(count: int, backing: int[]);

impl Array {
    static fn create(): Array {
        val array: Array;

        array = Array::new(0, alloc(3));
        ret array;
    }

    fn add(self: Array, object: int): int {
        self.backing[self.count] = object;
        self.count = self.count + 1;
        ret self.count;
    }

    fn get(self: Array, index: int): int {
        ret self.backing[index];
    }
}

fn doSomething(): int {
    ret 7;
}


fn main(): int {
    val array: Array;
    array = Array::create();

    array.add(10);
    array.add(20);

    doSomething();
    //array.add(2);

    ret array.get(1);

}
